version: '3.8'

services:
    taskcraft_proxy:
        image: jwilder/nginx-proxy:alpine
        container_name: taskcraft_nginx_proxy
        ports:
            - "81:80"
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
            - ./docker/8.2/custom.conf:/etc/nginx/conf.d/custom.conf:ro
        networks:
            - taskcraft
        environment:
            TRUST_DOWNSTREAM_PROXY: "false"
            DEFAULT_HOST: dev.app.taskcraft.com

    taskcraft_api:
        build:
            context: ./docker/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: 1000
        image: sail-8.2/app
        container_name: taskcraft_api
        hostname: taskcraft_api
        expose:
            - 80
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
            TZ: 'America/New_York'
            VIRTUAL_HOST: dev.api.taskcraft.com
            VIRTUAL_PORT: 80
            DB_CONNECTION: 'mysql'
            DB_HOST: 'taskcraft_mysql'
            DB_PORT: '3306'
            DB_DATABASE: 'taskcraft'
            DB_USERNAME: 'root'
            DB_PASSWORD: 'password'
            REDIS_HOST: 'taskcraft_redis'
        volumes:
            - '.:/var/www/html'
        networks:
            - taskcraft
        depends_on:
            - taskcraft_mysql
            - taskcraft_redis
            - taskcraft_mailpit

    taskcraft_app:
        image: node:latest
        environment:
            VIRTUAL_HOST: dev.app.taskcraft.com
            VIRTUAL_PORT: 8080
        container_name: taskcraft_app
        hostname: taskcraft_app
        expose:
            - 8080
        volumes:
            - ../taskCraft_app:/app
        working_dir: /app
        command: bash -c "npm install && npm run dev"
        networks:
            taskcraft:
                aliases:
                    - "dev.app.taskcraft.com"
        depends_on:
            - taskcraft_api

    taskcraft_reverb:
        build:
            context: ./docker/8.2
            dockerfile: Dockerfile.reverb
        container_name: taskcraft_reverb
        hostname: taskcraft_reverb
        expose:
            - 8080
        ports:
            - "8080:8080"
        environment:
            VIRTUAL_HOST: dev.reverb.taskcraft.com
            VIRTUAL_PORT: 8080
        volumes:
            - '.:/var/www/html'  # This could remain if tasks rely on mounted volume.
        networks:
            - taskcraft
        depends_on:
            - taskcraft_api
        extra_hosts:
            - "dev.reverb.taskcraft.com:127.0.0.1"

    taskcraft_mysql:
        image: "mysql/mysql-server:8.0"
        ports:
            - "3307:3306"
        container_name: taskcraft_mysql
        hostname: taskcraft_mysql
        environment:
            MYSQL_ROOT_PASSWORD: "password"
            MYSQL_DATABASE: "taskcraft"
            MYSQL_USER: "root"
            MYSQL_PASSWORD: "password"
        volumes:
            - "taskcraft-mysql:/var/lib/mysql"
            - ./docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh
        networks:
            - taskcraft

    taskcraft_redis:
        image: "redis:alpine"
        container_name: taskcraft_redis
        ports:
            - "6380:6379"
        volumes:
            - "taskcraft-redis:/data"
        networks:
            - taskcraft

    taskcraft_mailpit:
        image: "axllent/mailpit:latest"
        environment:
            VIRTUAL_HOST: dev.mailpit.taskcraft.com
            VIRTUAL_PORT: 8025
        container_name: taskcraft_mailpit
        ports:
            - "1025:1025"
            - "8025:8025"
        networks:
            - taskcraft

networks:
    taskcraft:
        driver: bridge

volumes:
    taskcraft-mysql:
        driver: local
    taskcraft-redis:
        driver: local
